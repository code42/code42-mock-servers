version: '2.4'
services:
  proxy:
    image: caddy
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
    restart: always
    ports:
      - "4200:80"
    depends_on:
      core:
        condition: service_healthy
      alerts:
        condition: service_healthy
      alert-rules:
        condition: service_healthy
      detection-lists:
        condition: service_healthy
      cases:
        condition: service_healthy
      storage:
        condition: service_healthy
      connected-server:
        condition: service_healthy
      audit-log:
        condition: service_healthy
      file-events:
        condition: service_healthy
      preservation-data-service:
        condition: service_healthy
      exfiltration-data-service:
        condition: service_healthy
      trusted-activities:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost || exit 1" ]
      interval: 30s
      timeout: 15s
      retries: 3

  core:
    image: c42/mock-microservice-endpoints:1.0
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mock_core
    restart: always
    command: mock docs/core.yml -p 4200 -h 0.0.0.0
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://core:4200 || exit 1"]
      interval: 30s
      timeout: 15s
      retries: 3

  alerts:
    image: c42/mock-microservice-endpoints:1.0
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mock_alerts
    restart: always
    command: mock docs/alerts.yml -p 4200 -h 0.0.0.0
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://alerts:4200 || exit 1"]
      interval: 30s
      timeout: 15s
      retries: 3

  alert-rules:
    image: c42/mock-microservice-endpoints:1.0
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mock_alert_rules
    restart: always
    command: mock docs/alert-rules.yml -p 4200 -h 0.0.0.0
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://alert-rules:4200 || exit 1"]
      interval: 30s
      timeout: 15s
      retries: 3

  detection-lists:
    image: c42/mock-microservice-endpoints:1.0
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mock_detection_lists
    restart: always
    command: mock docs/detection-lists.yml -p 4200 -h 0.0.0.0
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://detection-lists:4200 || exit 1"]
      interval: 30s
      timeout: 15s
      retries: 3

  cases:
    image: c42/mock-microservice-endpoints:1.0
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mock_cases
    restart: always
    command: mock docs/cases.yml -p 4200 -h 0.0.0.0
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://cases:4200 || exit 1"]
      interval: 30s
      timeout: 15s
      retries: 3

  storage:
    image: c42/mock-microservice-endpoints:1.0
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mock_storage
    restart: always
    command: mock docs/storage.yml -p 4200 -h 0.0.0.0
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://storage:4200 || exit 1"]
      interval: 30s
      timeout: 15s
      retries: 3

  connected-server:
    image: c42/mock-microservice-endpoints:1.0
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mock_connected_server
    restart: always
    command: mock docs/connected-server.yml -p 4200 -h 0.0.0.0
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://connected-server:4200 || exit 1"]
      interval: 30s
      timeout: 15s
      retries: 3

  audit-log:
    image: c42/mock-microservice-endpoints:1.0
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mock_audit_log
    restart: always
    command: mock docs/audit-log.yml -p 4200 -h 0.0.0.0
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://audit-log:4200 || exit 1"]
      interval: 30s
      timeout: 15s
      retries: 3

  file-events:
    image: c42/mock-microservice-endpoints:1.0
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mock_file_events
    restart: always
    command: mock docs/file-events.yml -p 4200 -h 0.0.0.0
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://file-events:4200 || exit 1"]
      interval: 30s
      timeout: 15s
      retries: 3

  preservation-data-service:
    image: c42/mock-microservice-endpoints:1.0
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mock_preservation_data_service
    restart: always
    command: mock docs/preservation-data-service.yml -p 4200 -h 0.0.0.0
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://preservation-data-service:4200 || exit 1"]
      interval: 30s
      timeout: 15s
      retries: 3

  exfiltration-data-service:
    image: c42/mock-microservice-endpoints:1.0
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mock_exfiltration_data_service
    restart: always
    command: mock docs/exfiltration-data-service.yml -p 4200 -h 0.0.0.0
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://exfiltration-data-service:4200 || exit 1"]
      interval: 30s
      timeout: 15s
      retries: 3

  trusted-activities:
    image: c42/mock-microservice-endpoints:1.0
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mock_trusted_activities
    restart: always
    command: mock docs/trusted-activities.yml -p 4200 -h 0.0.0.0
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://trusted-activities:4200 || exit 1"]
      interval: 30s
      timeout: 15s
      retries: 3
